# config/config.yaml

# ----------------------------------------------------------
# This is the main configuration file for the 'tucca-rna-seq' workflow
#
# For instructions on how to set up the workflow please refer to our
# documentation at:
# https://tucca-cellag.github.io/tucca-rna-seq/introduction
#
# If you cannot find a satisfactory answer in our documentation, please let us
# know about your issue on our GitHub page, so we can assist you further:
# https://github.com/tucca-cellag/tucca-rna-seq/issues/new
# ----------------------------------------------------------

# ----------------------------------------------------------
# Genome Section
#
# This section defines the reference genome parameters
#
# - source: Specify either "RefSeq", "Ensembl", or "GENCODE"
#     • RefSeq info: https://www.ncbi.nlm.nih.gov/refseq/about/
#     • Ensembl info: https://ensembl.org/info/genome/genebuild/assembly.html
#     • Comparison: https://www.ncbi.nlm.nih.gov/books/NBK50679/#RefSeqFAQ.what_is_the_difference_between_1
#     • GENCODE info: https://www.gencodegenes.org/pages/gencode.html
#
# - accession: The genome’s GenBank or RefSeq accession number
#     (See: https://www.ncbi.nlm.nih.gov/datasets/genome/)
#
# - name: The name assigned to the genome assembly (build)
#
# - release: The release of the Ensembl or GENCODE assembly (not required for RefSeq assemblies)
#
# - species: Scientific name in the format "Genus_species" (e.g., "Gallus_gallus")
#
# ----------------------------------------------------------
ref_assembly:
  source: "Ensembl"
  accession: "GCA_000146045.2"
  name: "R64-1-1"
  release: "113"
  species: "Saccharomyces_cerevisiae"

# ----------------------------------------------------------
# API Key Section:
# If you are running this workflow too frequently, NCBI's datasets software may
# throttle your API calls without an API key.
# ----------------------------------------------------------
api_keys:
  ncbi: ""

# ----------------------------------------------------------
# Differential Expression Section:
# ----------------------------------------------------------
diffexp:
  tximeta:
    factors:
      - name: "treatment1"
        reference_level: "untreated"
      - name: "treatment2"
        reference_level: "untreated"
    extra: ""
  deseq2:
    analyses:
      - name: "treatment1+treatment2"
        deseqdataset:
          formula: "~ treatment1 + treatment2"
          min_counts: 10
          extra: ""
          threads: 1
        wald:
          deseq_extra: ""
          shrink_extra: "type = 'apeglm'"
          results_extra: "alpha = 0.005"
          threads: 1
        contrasts:
          - name: "treatment1_treated_vs_untreated"
            elements: ["treatment1", "treated", "untreated"]
          - name: "treatment2_treated_vs_untreated"
            elements: ["treatment2", "treated", "untreated"]

  # For min_counts
  # See https://www.bioconductor.org/packages/devel/bioc/vignettes/DESeq2/inst/doc/DESeq2.html#pre-filtering
  # Alternatively rely on results()
  # See https://www.bioconductor.org/packages/devel/bioc/vignettes/DESeq2/inst/doc/DESeq2.html#indfilt

# ----------------------------------------------------------
# Differential Expression Section:
# ----------------------------------------------------------
enrichment:

# ----------------------------------------------------------
# Sample and Unit Sheet Section
# ----------------------------------------------------------
# Path to your SAMPLE SHEET which keeps track of your biological replicates
samples: "config/samples.tsv"
# Path to your sequencing UNIT SHEET which keeps track of your technical
# replicates (e.g. sequencer lanes or resequencing of the same biological
# sample)
units: "config/units.tsv"

# ----------------------------------------------------------
# Params Section: Configurable Settings for the Software
#
# This section contains all the adjustable parameters for the various
# software tools used in the workflow. Update these settings to customize
# the analysis to match your experimental setup.
#
# Each sub-section (e.g., fastqc, star, salmon_quant) provides tool-specific
# options. Modify these as needed to fine-tune the performance and behavior
# of the pipeline.
# ----------------------------------------------------------
params:
  fastqc:
    memory: 1024
    extra: ""
  star_index:
    sjdbOverhang: 149
    extra: "--genomeSAindexNbases 10" # for small genomes (eg. Sc)
  star:
    extra: >-
      --outSAMtype BAM SortedByCoordinate --outSAMunmapped Within
      --outSAMattributes Standard --outFilterMultimapNmax 1
      --outFilterScoreMinOverLread 0 --outFilterMatchNminOverLread 0
      --alignIntronMin 1 --alignIntronMax 2500
  qualimap_rnaseq:
    counting_alg: "proportional"
    sequencing_protocol: "non-strand-specific"
    extra: "--paired --java-mem-size=8G"
  salmon_index:
    extra: "-k 31"
  salmon_quant:
    # --lib_type A: Auto detect type of sequencing lib from which the reads
    # came from (recommended)
    libtype: "A"
    extra: "--seqBias --posBias --writeUnmappedNames"
  multiqc:
    # Leave out --force if you don't want to automatically overwrite existing
    # multiqc results on a re-run
    extra: "--verbose --force"
  sra_tools:
    vdb_config_ra_path: "/repository/user/main/remote_access=true"
