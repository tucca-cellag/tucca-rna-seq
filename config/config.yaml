# config/config.yaml

# This is the main configuration file for the 'tucca-rna-seq' workflow
#
# For instructions on how to set up the workflow please refer to our
# documentation at:
# https://tucca-cellag.github.io/tucca-rna-seq/introduction
#
# If you cannot find a satisfactory answer in our documentation, please let us
# know about your issue on our GitHub page, so we can assist you further:
# https://github.com/tucca-cellag/tucca-rna-seq/issues/new

# The default data/configuration is an example analysis using data from
# BioProject PRJNA716186 (https://www.ncbi.nlm.nih.gov/bioproject/PRJNA716186)

# Path to your SAMPLE SHEET which keeps track of your biological replicates
samples: config/samples.tsv

# Path to your sequencing UNIT SHEET which keeps track of your technical
# replicates (e.g. sequencer lanes or resequencing of the same biological
# sample)
units: config/units.tsv

ref:
  # GenBank or RefSeq accession number for the genome of the species of
  # interest (or closest related species if no reference genome exists)
  # Find the accession number here:
  #   https://www.ncbi.nlm.nih.gov/datasets/genome/
  # TODO: Workflow is only currently validated to work on RefSeq genomes
  ncbi_genome_accession: GCF_016699485.2 # Gallus gallus

# If you are running this workflow too frequently, NCBI's datasets software may
# throttle your API calls without an API key.
api_keys:
  ncbi: 

# Containers to be used for the environment for each rule (via Singularity)
# DO NOT CHANGE UNLESS YOU WANT TO CHANGE THE VERSION OF THE SOFTWARE YOU ARE
# USING. UPGRADING/DOWNGRADING VERSIONS MAY BREAK THIS WORKFLOW. 
containers:
  fastqc: "docker://quay.io/biocontainers/fastqc:0.12.1--hdfd78af_0"
  p7zip: "docker://quay.io/biocontainers/p7zip:16.02"
  ncbi_datasets: "docker://staphb/ncbi-datasets:16.41.0"
  multiqc: "docker://quay.io/biocontainers/multiqc:1.27.1--pyhdfd78af_0"
  qualimap: "docker://quay.io/biocontainers/qualimap:2.3--hdfd78af_0"
  salmon: "docker://quay.io/biocontainers/salmon:1.10.3--h45fbf2d_4"
  python: "docker://python:latest"
  ubuntu: "docker://ubuntu:latest"
  sra_tools: "docker://quay.io/biocontainers/sra-tools:3.2.0--h4304569_0"
  star: "docker://quay.io/biocontainers/star:2.7.11b--h5ca1c30_5"

params:
  fastqc:
    memory: 1024
    extra: ""
  salmon_index:
    kmer_len: 31
    extra: ""
  star_index:
    sjdbOverhang: 149
    extra: ""
  star:
    # Note that this Snakemake workflow is currently only built to work when
    # the output files from STAR are BAM files that are sorted by coordinate.
    outSAMtype: "BAM SortedByCoordinate" # Changing will break the workflow
    outSAMunmapped: Within
    outSAMattributes: Standard
    readFilesCommand: zcat
    outFilterMultimapNmax: 1
    outFilterScoreMinOverLread: 0
    outFilterMatchNminOverLread: 0
    alignIntronMin: 1
    alignIntronMax: 2500
    extra: ""
  qualimap_rnaseq:
    counting_alg: proportional
    sequencing_protocol: "non-strand-specific"
    extra: "--paired --java-mem-size=8G"
  salmon_quant:
    lib_type: A
    # --lib_type A: Auto detect type of sequencing lib from which the reads
    # came from (recommended)
    mapping_strategy: "--validateMappings"
    # --validateMappings: Default mapping strategy for Salmon v1.0.0 and forward
    bias_correction: "--seqBias --posBias"
    extra: "--writeUnmappedNames"
  multiqc:
    report_name: "multiqc_report"
    overwrite_existing: "-f"
    # Leave out if you don't want to automatically overwrite existing reports
    multiqc_config_path: "config/multiqc_config.yaml"
    extra: ""
  sra_tools:
    vdb_config_ra_path: "/repository/user/main/remote_access=true"
