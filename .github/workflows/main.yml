# .github/workflow/main.yml

name: Tests

on:
  push:
    branches: [main, feat/*]
  pull_request:
    branches-ignore: []
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 1"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  Formatting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true
      - name: Remove .Rprofile to avoid renv auto-activation
        run: rm -rf .Rprofile renv renv.lock
      - name: Run Super-Linter
        uses: github/super-linter@v7
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_SNAKEMAKE_SNAKEFMT: true
          VALIDATE_YAML: true
          VALIDATE_R: true
          VALIDATE_PYTHON_PYLINT: true

  Linting:
    name: Linting (using ${{ matrix.version.name }} versions)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        version:
          - name: stable
            snakemake: 8.27.1
            allow_failure: false
          - name: latest
            snakemake: "*"
            allow_failure: false
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Remove .Rprofile to avoid renv auto-activation
        run: rm -rf .Rprofile renv renv.lock
      - name: Lint workflow
        uses: snakemake/snakemake-github-action@v2
        continue-on-error: ${{ matrix.version.allow_failure }}
        with:
          directory: .
          snakefile: workflow/Snakefile
          args: --lint --verbose
          snakemake-version: ${{ matrix.version.snakemake }}

  SDM_Conda:
    name: ${{ matrix.scenario.name }} (Snakemake ${{ matrix.version.name }})
    runs-on: ubuntu-latest
    needs:
      - Linting
      - Formatting
    strategy:
      fail-fast: true
      matrix:
        scenario:
          # SRA Reads
          - name: SRA_Conda
            rules: aggregate_sra_pe_reads
            configfile: .test/sra_reads/config/config.yaml
            extra_args: ""
            cleanup: false
          # Local Reads - Ensembl (complex config)
          - name: LR_Ens_Comp_Conda
            rules: all
            configfile: .test/local_reads/ensembl/config_complex/config.yaml
            extra_args: ""
            cleanup: false
          # Local Reads - RefSeq (complex config)
          - name: LR_Ref_Comp_Conda
            rules: all
            configfile: .test/local_reads/refseq/config_complex/config.yaml
            extra_args: ""
            cleanup: false
        version:
          - name: stable
            snakemake: 8.27.1
            allow_failure: false
          - name: latest
            snakemake: "*"
            allow_failure: false
    steps:
      - name: update apt
        run: sudo apt-get update
      - name: Free Disk Space (Ubuntu)
        if: ${{ matrix.scenario.cleanup }}
        uses: jlumbroso/free-disk-space@v1.3.0
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: false

          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: false
          swap-storage: true
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Remove .Rprofile to avoid renv auto-activation
        run: rm -rf .Rprofile renv renv.lock
      - name: Run Snakemake workflow (Conda)
        uses: snakemake/snakemake-github-action@v2
        continue-on-error: ${{ matrix.version.allow_failure }}
        with:
          directory: .
          snakefile: workflow/Snakefile
          args: >
            ${{ matrix.scenario.rules }} --workflow-profile profiles/github-actions
            --configfile ${{ matrix.scenario.configfile }}
            --config api_keys='{"ncbi": "${{ secrets.BB_NCBI_API_KEY }}"}'
            ${{ matrix.scenario.extra_args }}
          show-disk-usage-on-error: true
          snakemake-version: ${{ matrix.version.snakemake }}
      - name: Upload ./logs/
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.scenario.name }}-smk_${{ matrix.version.name }}-logs
          path: logs/
      - name: Upload Snakemake results for Rmd tests
        if: success() && (matrix.scenario.name == 'LR_Ens_Comp_Conda' || matrix.scenario.name == 'LR_Ref_Comp_Conda')
        uses: actions/upload-artifact@v4
        with:
          name: snakemake-results-${{ matrix.scenario.name }}-${{ matrix.version.name }}
          path: |
            resources/
            config/
            results/

  SDM_Singularity_Conda:
    name: ${{ matrix.scenario.name }} (Snakemake ${{ matrix.version.name }})
    runs-on: ubuntu-latest
    needs:
      - Linting
      - Formatting
    strategy:
      fail-fast: true
      matrix:
        scenario:
          # SRA Reads
          - name: SRA_Singularity
            rules: aggregate_sra_pe_reads
            configfile: .test/sra_reads/config/config.yaml
            extra_args: ""
            cleanup: true
          # Local Reads - Ensembl (complex config)
          - name: LR_Ens_Comp_Singularity
            rules: all
            configfile: .test/local_reads/ensembl/config_complex/config.yaml
            extra_args: ""
            cleanup: true
          # Local Reads - RefSeq (complex config)
          - name: LR_Ref_Comp_Singularity
            rules: all
            configfile: .test/local_reads/refseq/config_complex/config.yaml
            extra_args: ""
            cleanup: true
        version:
          - name: stable
            snakemake: 8.27.1
            singularity: 3.8.4
            allow_failure: false
          - name: latest
            snakemake: "*"
            singularity: 3.8.4
            allow_failure: false
    steps:
      - name: update apt
        run: sudo apt-get update
      - name: Free Disk Space (Ubuntu)
        if: ${{ matrix.scenario.cleanup }}
        uses: jlumbroso/free-disk-space@v1.3.0
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: false

          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: false
          swap-storage: true
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Remove .Rprofile to avoid renv auto-activation
        run: rm -rf .Rprofile renv renv.lock
      - name: Create host directory for R config (Singularity)
        run: mkdir -p ${{ github.workspace }}/.host_R_config_singularity
      - name: Install Singularity
        uses: singularityhub/install-singularity@main
        with:
          singularity-version: ${{ matrix.version.singularity }}
      - name: Run Snakemake workflow (Singularity)
        uses: snakemake/snakemake-github-action@v2
        continue-on-error: ${{ matrix.version.allow_failure }}
        with:
          directory: .
          snakefile: workflow/Snakefile
          # Usage of --bind required for success of rule make_linked_txome
          # on GitHub runners
          args: >
            ${{ matrix.scenario.rules }} --workflow-profile profiles/github-actions
            --use-singularity
            --singularity-args "--bind ${{ github.workspace }}/.host_R_config_singularity:/home/runner/.config/R"
            --configfile ${{ matrix.scenario.configfile }}
            --config api_keys='{"ncbi": "${{ secrets.BB_NCBI_API_KEY }}"}'
            ${{ matrix.scenario.extra_args }}
          show-disk-usage-on-error: true
          snakemake-version: ${{ matrix.version.snakemake }}
      - name: Upload ./logs/
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.scenario.name }}-smk_${{ matrix.version.name }}-logs
          path: logs/

  SDM_Apptainer_Conda:
    name: ${{ matrix.scenario.name }} (Snakemake ${{ matrix.version.name }})
    runs-on: ubuntu-latest
    needs:
      - Linting
      - Formatting
    strategy:
      fail-fast: true
      matrix:
        scenario:
          # SRA Reads
          - name: SRA_Apptainer
            rules: aggregate_sra_pe_reads
            configfile: .test/sra_reads/config/config.yaml
            extra_args: ""
            cleanup: true
          # Local Reads - Ensembl (complex config)
          - name: LR_Ens_Comp_Apptainer
            rules: all
            configfile: .test/local_reads/ensembl/config_complex/config.yaml
            extra_args: ""
            cleanup: true
          # Local Reads - RefSeq (complex config)
          - name: LR_Ref_Comp_Apptainer
            rules: all
            configfile: .test/local_reads/refseq/config_complex/config.yaml
            extra_args: ""
            cleanup: true
        version:
          - name: stable
            snakemake: 8.27.1
            apptainer: 1.4.1
            allow_failure: false
          - name: latest
            snakemake: "*"
            apptainer: 1.4.1
            allow_failure: false
    steps:
      - name: update apt
        run: sudo apt-get update
      - name: Free Disk Space (Ubuntu)
        if: ${{ matrix.scenario.cleanup }}
        uses: jlumbroso/free-disk-space@v1.3.0
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: false

          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: false
          swap-storage: true
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Remove .Rprofile to avoid renv auto-activation
        run: rm -rf .Rprofile renv renv.lock
      - name: Create host directory for R config (Apptainer)
        run: mkdir -p ${{ github.workspace }}/.host_R_config_apptainer
      - name: Install Apptainer
        uses: eWaterCycle/setup-apptainer@v2
        with:
          apptainer-version: ${{ matrix.version.apptainer }}
      - name: Run Snakemake workflow (Apptainer)
        uses: snakemake/snakemake-github-action@v2
        continue-on-error: ${{ matrix.version.allow_failure }}
        with:
          directory: .
          snakefile: workflow/Snakefile
          # Usage of --bind required for success of rule make_linked_txome
          # on GitHub runners
          args: >
            ${{ matrix.scenario.rules }} --workflow-profile profiles/github-actions
            --use-singularity
            --singularity-args "--bind ${{ github.workspace }}/.host_R_config_apptainer:/home/runner/.config/R"
            --configfile ${{ matrix.scenario.configfile }}
            --config api_keys='{"ncbi": "${{ secrets.BB_NCBI_API_KEY }}"}'
            ${{ matrix.scenario.extra_args }}
          show-disk-usage-on-error: true
          snakemake-version: ${{ matrix.version.snakemake }}
      - name: Upload ./logs/
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.scenario.name }}-smk_${{ matrix.version.name }}-logs
          path: logs/

  Test_Rmds:
    name: Test Rmd analysis notebooks (using ${{ matrix.version.name }} from ${{ matrix.scenario.name }})
    runs-on: ubuntu-latest
    needs: [SDM_Conda]
    strategy:
      fail-fast: false
      matrix:
        scenario:
          - name: LR_Ens_Comp_Conda
          - name: LR_Ref_Comp_Conda
        version:
          - name: stable
            snakemake: 8.27.1
          - name: latest
            snakemake: "*"
    steps:
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            gsfonts \
            libcurl4-openssl-dev \
            libfontconfig1-dev \
            libfreetype6-dev \
            libgit2-dev \
            libglpk-dev \
            libmagick++-dev \
            libpng-dev \
            libx11-dev \
            pandoc
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Remove .Rprofile to avoid renv auto-activation
        run: rm -f .Rprofile

      - name: Download Snakemake results
        uses: actions/download-artifact@v4
        with:
          name: snakemake-results-${{ matrix.scenario.name }}-${{ matrix.version.name }}
          path: .

      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: "4.4.3"
          cran: "https://packagemanager.posit.co/cran/2025-04-10"

      - name: Restore renv environment
        uses: r-lib/actions/setup-renv@v2

      - name: Render Rmd files
        shell: Rscript {0}
        run: |
          if (!requireNamespace("rmarkdown", quietly = TRUE)) renv::install("rmarkdown")
          rmarkdown::render(
            "analysis/GeneTonic_playground.Rmd",
            output_file = "GeneTonic_playground.html",
            output_dir = "rmd_test_output"
          )
          rmarkdown::render(
            "analysis/pcaExplorer_playground.Rmd",
            output_file = "pcaExplorer_playground.html",
            output_dir = "rmd_test_output"
          )
      - name: Upload Rmd test output
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: rmd-test-output-${{ matrix.scenario.name }}-${{ matrix.version.name }}
          path: rmd_test_output/
