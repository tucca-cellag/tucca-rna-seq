# .github/workflow/main.yml

name: Tests

on:
  push:
    branches: [main]
  pull_request:
    branches-ignore: []

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  Formatting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Run Super-Linter
        uses: github/super-linter@v7
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_SNAKEMAKE_SNAKEFMT: true
          VALIDATE_YAML: true
          VALIDATE_R: true
          VALIDATE_PYTHON_PYLINT: true

  Linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Lint workflow
        uses: snakemake/snakemake-github-action@v2
        with:
          directory: .
          snakefile: workflow/Snakefile
          args: "--lint"
          snakemake-version: 8.27.1

  Snakemake_Env_Init:
    name: Build Snakemake workflow cache with Singularity v3.8.4
    runs-on: ubuntu-latest
    needs:
      - Linting
      - Formatting
    steps:
      # Check out your repository (including your Snakefile and profiles directory)
      - name: Checkout Repository
        uses: actions/checkout@v4
      # Cache the Singularity images directory.
      - name: Cache Singularity Images
        uses: actions/cache@v4
        with:
          # Adjust the path if your Singularity images are stored elsewhere.
          path: .snakemake/singularity
          # Here we use a key that combines the OS and a hash of all .smk files in the rules directory.
          key: ${{ runner.os }}-singularity-${{ hashFiles('workflow/rules/*.smk') }}
          restore-keys: |
            ${{ runner.os }}-singularity-
      # Cache the Conda packages directory to avoid re-downloading packages
      - name: Cache Conda Packages
        uses: actions/cache@v4
        with:
          # Path used in your setup; adjust if you use a different directory.
          path: /home/runner/conda_pkgs_dir
          # Use the environment file hash to update the cache whenever it changes.
          key: ${{ runner.os }}-conda-pkgs-${{ hashFiles('.snakemake.environment.yaml') }}
          restore-keys: |
            ${{ runner.os }}-conda-pkgs-
      # Cache the snakemake environment directory
      - name: Cache snakemake Conda Environment
        uses: actions/cache@v4
        with:
          # Adjust this path to where your environment is created.
          path: /home/runner/miniconda3/envs/snakemake
          key: ${{ runner.os }}-snakemake-env-${{ hashFiles('.snakemake.environment.yaml') }}
          restore-keys: |
            ${{ runner.os }}-snakemake-env-
      # Install Singularity (or Apptainer) version 3.8.4.
      - name: Install Singularity 3.8.4
        uses: singularityhub/install-singularity@main
        with:
          singularity-version: "3.8.4"
      # Run the Snakemake workflow to generate cache files.
      - name: Run Snakemake on dummy_all_images to create cache files
        uses: snakemake/snakemake-github-action@v2
        with:
          directory: "." # Working directory
          snakefile: "workflow/Snakefile" # Snakefile location
          args: "dummy_all_images --workflow-profile profiles/github-actions"
          show-disk-usage-on-error: true
          snakemake-version: 8.27.1

  Generate_Genome:
    name: "Generate ${{ matrix.organism }} Genome Artifact"
    runs-on: ubuntu-latest
    needs:
      - Linting
      - Formatting
      - Snakemake_Env_Init
    strategy:
      matrix:
        include:
          - organism: SCerevisiae
            configfile: .test/singularity/local_reads/config/config.yaml
            artifactName: Sc-genome-artifact
          - organism: GGallus
            configfile: .test/singularity/sra_reads/config/config.yaml
            artifactName: Gg-genome-artifact
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Cache Singularity Images
        uses: actions/cache@v4
        with:
          path: .snakemake/singularity
          key: ${{ runner.os }}-singularity-${{ hashFiles('workflow/rules/*.smk') }}
          restore-keys: |
            ${{ runner.os }}-singularity-
      - name: Cache Conda Packages
        uses: actions/cache@v4
        with:
          path: /home/runner/conda_pkgs_dir
          key: ${{ runner.os }}-conda-pkgs-${{ hashFiles('.snakemake.environment.yaml') }}
          restore-keys: |
            ${{ runner.os }}-conda-pkgs-
      - name: Cache snakemake Conda Environment
        uses: actions/cache@v4
        with:
          path: /home/runner/miniconda3/envs/snakemake
          key: ${{ runner.os }}-snakemake-env-${{ hashFiles('.snakemake.environment.yaml') }}
          restore-keys: |
            ${{ runner.os }}-snakemake-env-
      - name: Install Singularity 3.8.4
        uses: singularityhub/install-singularity@main
        with:
          singularity-version: "3.8.4"
      - name: Run datasets_download_genome rule
        uses: snakemake/snakemake-github-action@v2
        with:
          directory: "."
          snakefile: "workflow/Snakefile"
          args: >
            datasets_download_genome --workflow-profile profiles/github-actions
            --configfile ${{ matrix.configfile }}
            --config api_keys="{\"ncbi\": \"${{ secrets.BB_NCBI_API_KEY }}\"}"
          show-disk-usage-on-error: true
          snakemake-version: 8.27.1
      - name: Upload Genome Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifactName }}
          path: "ncbi_dataset_*.zip"

  Run_Reads_Workflow:
    name: "Run workflow on ${{ matrix.organism }} reads"
    runs-on: ubuntu-latest
    needs:
      - Linting
      - Formatting
      - Snakemake_Env_Init
      - Generate_Genome
    strategy:
      matrix:
        include:
          - organism: SCerevisiae
            artifactName: Sc-genome-artifact
            configfile: .test/singularity/local_reads/config/config.yaml
            target: all
          - organism: GGallus
            artifactName: Gg-genome-artifact
            configfile: .test/singularity/sra_reads/config/config.yaml
            target: results/sra_tools/sra_pe_aggregate.done
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Download Genome Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.artifactName }}
          path: .
      - name: Cache Singularity Images
        uses: actions/cache@v4
        with:
          path: .snakemake/singularity
          key: ${{ runner.os }}-singularity-${{ hashFiles('workflow/rules/*.smk') }}
          restore-keys: |
            ${{ runner.os }}-singularity-
      - name: Cache Conda Packages
        uses: actions/cache@v4
        with:
          path: /home/runner/conda_pkgs_dir
          key: ${{ runner.os }}-conda-pkgs-${{ hashFiles('.snakemake.environment.yaml') }}
          restore-keys: |
            ${{ runner.os }}-conda-pkgs-
      - name: Cache snakemake Conda Environment
        uses: actions/cache@v4
        with:
          path: /home/runner/miniconda3/envs/snakemake
          key: ${{ runner.os }}-snakemake-env-${{ hashFiles('.snakemake.environment.yaml') }}
          restore-keys: |
            ${{ runner.os }}-snakemake-env-
      - name: Install Singularity 3.8.4
        uses: singularityhub/install-singularity@main
        with:
          singularity-version: "3.8.4"
      - name: Run workflow on ${{ matrix.organism }} reads
        env:
          BB_NCBI_API_KEY: ${{ secrets.BB_NCBI_API_KEY }}
        uses: snakemake/snakemake-github-action@v2
        with:
          directory: "."
          snakefile: "workflow/Snakefile"
          args: >
            ${{ matrix.target }} --workflow-profile profiles/github-actions
            --configfile ${{ matrix.configfile }}
            --config api_keys="{\"ncbi\": \"${{ secrets.BB_NCBI_API_KEY }}\"}"
          show-disk-usage-on-error: true
          snakemake-version: 8.27.1

      #- name: Test report
      #  uses: snakemake/snakemake-github-action@v2
      #  with:
      #    directory: .test
      #    snakefile: workflow/Snakefile
      #    args: "--report report.zip"
      #    snakemake-version: 8.27.1
