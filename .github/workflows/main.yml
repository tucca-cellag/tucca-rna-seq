# .github/workflow/main.yml

name: Tests

on:
  push:
    branches: [main]
  pull_request:
    branches-ignore: []
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  Formatting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true
      - name: Run Super-Linter
        uses: github/super-linter@v7
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_SNAKEMAKE_SNAKEFMT: true
          VALIDATE_YAML: true
          VALIDATE_R: true
          VALIDATE_PYTHON_PYLINT: true

  Linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Lint workflow
        uses: snakemake/snakemake-github-action@v2
        with:
          directory: .
          snakefile: workflow/Snakefile
          args: --lint
          snakemake-version: 8.27.1

  Snakemake_Env_Init:
    name: Build Snakemake workflow cache with Singularity v3.8.4
    runs-on: ubuntu-latest
    needs:
      - Linting
      - Formatting
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Cache Singularity Images
        uses: actions/cache@v4
        with:
          path: .snakemake/singularity
          key: ${{ runner.os }}-singularity-${{ hashFiles('workflow/rules/*.smk') }}
          restore-keys: |
            ${{ runner.os }}-singularity-
      - name: Cache Conda Packages
        uses: actions/cache@v4
        with:
          path: /home/runner/conda_pkgs_dir
          key: ${{ runner.os }}-conda-pkgs-${{ hashFiles('.snakemake.environment.yaml') }}
          restore-keys: |
            ${{ runner.os }}-conda-pkgs-
      - name: Cache snakemake Conda Environment
        uses: actions/cache@v4
        with:
          path: /home/runner/miniconda3/envs/snakemake
          key: ${{ runner.os }}-snakemake-env-${{ hashFiles('.snakemake.environment.yaml') }}
          restore-keys: |
            ${{ runner.os }}-snakemake-env-
      - name: Install Singularity 3.8.4
        uses: singularityhub/install-singularity@main
        with:
          singularity-version: 3.8.4
      - name: Run Snakemake on dummy_all_images to create cache files
        uses: snakemake/snakemake-github-action@v2
        with:
          directory: .
          snakefile: workflow/Snakefile
          args: dummy_all_images --workflow-profile profiles/github-actions
          show-disk-usage-on-error: true
          snakemake-version: 8.27.1
      - name: Upload ./logs/
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: env-init-logs
          path: logs/

  Generate_Genome:
    name: Generate SCerevisiae Genome Artifact
    runs-on: ubuntu-latest
    needs:
      - Linting
      - Formatting
      - Snakemake_Env_Init
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Cache Singularity Images
        uses: actions/cache@v4
        with:
          path: .snakemake/singularity
          key: ${{ runner.os }}-singularity-${{ hashFiles('workflow/rules/*.smk') }}
          restore-keys: |
            ${{ runner.os }}-singularity-
      - name: Cache Conda Packages
        uses: actions/cache@v4
        with:
          path: /home/runner/conda_pkgs_dir
          key: ${{ runner.os }}-conda-pkgs-${{ hashFiles('.snakemake.environment.yaml') }}
          restore-keys: |
            ${{ runner.os }}-conda-pkgs-
      - name: Cache snakemake Conda Environment
        uses: actions/cache@v4
        with:
          path: /home/runner/miniconda3/envs/snakemake
          key: ${{ runner.os }}-snakemake-env-${{ hashFiles('.snakemake.environment.yaml') }}
          restore-keys: |
            ${{ runner.os }}-snakemake-env-
      - name: Install Singularity 3.8.4
        uses: singularityhub/install-singularity@main
        with:
          singularity-version: 3.8.4
      - name: Run datasets_download_genome rule
        uses: snakemake/snakemake-github-action@v2
        with:
          directory: .
          snakefile: workflow/Snakefile
          args: >
            datasets_download_genome --workflow-profile profiles/github-actions
            --configfile .test/singularity/local_reads/config/config.yaml
            --config api_keys="{\"ncbi\": \"${{ secrets.BB_NCBI_API_KEY }}\"}"
          show-disk-usage-on-error: true
          snakemake-version: 8.27.1
      - name: Upload Genome Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Sc-genome-artifact
          path: ncbi_dataset_*.zip
      - name: Upload ./logs/
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gen-scerevisiae-genome-logs
          path: logs/

  Run_Workflow:
    name: Run workflow for ${{ matrix.name }}
    runs-on: ubuntu-latest
    needs:
      - Linting
      - Formatting
      - Snakemake_Env_Init
      - Generate_Genome
    strategy:
      matrix:
        include:
          - name: Local Reads (dryrun)
            log_name: local-run-dryrun
            configfile: .test/singularity/local_reads/config/config.yaml
            extra_args: --dryrun --printshellcmds
          - name: Local Reads
            log_name: local-run
            configfile: .test/singularity/local_reads/config/config.yaml
            extra_args:
          - name: SRA Reads (dryrun)
            log_name: sra-run-dryrun
            configfile: .test/singularity/sra_reads/config/config.yaml
            extra_args: --dryrun --printshellcmds
          - name: SRA Reads
            log_name: sra-run
            configfile: .test/singularity/sra_reads/config/config.yaml
            extra_args:
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Download Genome Artifact
        uses: actions/download-artifact@v4
        with:
          name: Sc-genome-artifact
          path: .
      - name: Debug file tree
        run: |
          sudo apt-get update && sudo apt-get install -y tree
          tree -a -I ".snakemake|dev|de_analysis|renv|.RProj.user|data|.github|.git|.Rprofile|.Rhistory|.DS_Store|*.user"
      - name: Cache Singularity Images
        uses: actions/cache@v4
        with:
          path: .snakemake/singularity
          key: ${{ runner.os }}-singularity-${{ hashFiles('workflow/rules/*.smk') }}
          restore-keys: |
            ${{ runner.os }}-singularity-
      - name: Cache Conda Packages
        uses: actions/cache@v4
        with:
          path: /home/runner/conda_pkgs_dir
          key: ${{ runner.os }}-conda-pkgs-${{ hashFiles('.snakemake.environment.yaml') }}
          restore-keys: |
            ${{ runner.os }}-conda-pkgs-
      - name: Cache snakemake Conda Environment
        uses: actions/cache@v4
        with:
          path: /home/runner/miniconda3/envs/snakemake
          key: ${{ runner.os }}-snakemake-env-${{ hashFiles('.snakemake.environment.yaml') }}
          restore-keys: |
            ${{ runner.os }}-snakemake-env-
      - name: Install Singularity 3.8.4
        uses: singularityhub/install-singularity@main
        with:
          singularity-version: 3.8.4
      - name: Run workflow
        env:
          BB_NCBI_API_KEY: ${{ secrets.BB_NCBI_API_KEY }}
        uses: snakemake/snakemake-github-action@v2
        with:
          directory: .
          snakefile: workflow/Snakefile
          args: >
            all --workflow-profile profiles/github-actions
            --configfile ${{ matrix.configfile }}
            --config api_keys="{\"ncbi\": \"${{ secrets.BB_NCBI_API_KEY }}\"}"
            ${{ matrix.extra_args }}
          show-disk-usage-on-error: true
          snakemake-version: 8.27.1
      - name: Upload ./logs/
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: workflow-${{ matrix.log_name }}-logs
          path: logs/

      #- name: Test report
      #  uses: snakemake/snakemake-github-action@v2
      #  with:
      #    directory: .test
      #    snakefile: workflow/Snakefile
      #    args: "--report report.zip"
      #    snakemake-version: 8.27.1
